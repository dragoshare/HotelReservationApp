@model HotelReservationApp2.Models.Reservation

@{
    ViewData["Title"] = "Create Reservation";
}

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
        {
            <p>@error.ErrorMessage</p>
        }
    </div>
}


<div class="container py-5">
    <h1 class="text-center mb-4" style="color: #0d6efd;">★★★★★ Hotel ★★★★★</h1> <br/>

    <div class="row mb-4">
        <h3 class="text-center mb-3">Wybierz pokój</h3>
        @foreach (var room in ViewBag.Rooms as IEnumerable<HotelReservationApp2.Models.Room>)
        {
            <div class="col-md-4 mb-3">
                <div class="card shadow-sm room-card" data-room-id="@room.Id" data-room-capacity="@room.Capacity" onclick="selectRoom(this)">
                    <img src="@room.ImageUrl" class="card-img-top" alt="Zdjęcie pokoju" style="height: 200px; object-fit: cover;">
                    <div class="card-body">
                        <h5 class="card-title">Numer pokoju: @room.RoomNumber</h5>
                        <p class="card-text">@room.Description</p>
                        <p class="text-muted">Cena: @room.Price.ToString("C") za noc</p>
                        <p class="text-muted">Pojemność: @room.Capacity osób</p>
                    </div>
                </div>
            </div>
        }
    </div>

    <div id="reservationForm" class="card shadow-lg mx-auto" style="max-width: 600px; display: none;">
        <div class="card-body">
            <h3 class="text-center mb-4">Dane rezerwacji</h3>
            <form asp-action="Create" method="post">
                <input type="hidden" id="RoomId" name="roomId" />
                <div class="form-floating mb-3">
                    <input id="NumberOfGuests" name="numberOfGuests" class="form-control" type="number" min="1" style="border-color: #0d6efd;" />
                    <label for="NumberOfGuests">Liczba gości</label>
                    <small id="CapacityInfo" class="form-text text-muted"></small>
                </div>

                <div class="form-floating mb-3">
                    <input id="FullName" name="fullName" class="form-control" style="border-color: #0d6efd;" />
                    <label for="FullName">Imię i nazwisko</label>
                </div>

                <div class="form-floating mb-3">
                    <input id="Email" name="email" class="form-control" type="email" style="border-color: #0d6efd;" />
                    <label for="Email">Email</label>
                </div>

                <div class="form-floating mb-3">
                    <input id="CheckInDate" name="checkInDate" class="form-control" type="date" style="border-color: #0d6efd;" />
                    <label for="CheckInDate">Data zameldowania</label>
                </div>

                <div class="form-floating mb-3">
                    <input id="CheckOutDate" name="checkOutDate" class="form-control" type="date" style="border-color: #0d6efd;" />
                    <label for="CheckOutDate">Data wymeldowania</label>
                </div>

                <div class="d-grid">
                    <button type="submit"  class="btn btn-primary btn-lg" style="background-color: #0d6efd; border-color: #0d6efd;">Stwórz rezerwację</button>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    document.querySelector('form').addEventListener('submit', function (event) {
        const checkInDate = new Date(document.getElementById('CheckInDate').value);
        const checkOutDate = new Date(document.getElementById('CheckOutDate').value);

        if (checkOutDate <= checkInDate) {
            event.preventDefault(); // Zatrzymuje wysyłanie formularza
            alert('Data wymeldowania musi być późniejsza niż data zameldowania.');
        }
    });
    function selectRoom(card) {
        // Remove selection from previously selected room
        const previouslySelected = document.querySelector('.room-card.selected');
        if (previouslySelected) {
            previouslySelected.classList.remove('selected');
        }

        // Mark the clicked card as selected
        card.classList.add('selected');

        // Get room details
        const roomId = card.getAttribute('data-room-id');
        const capacity = card.getAttribute('data-room-capacity');

        // Update form fields
        document.getElementById('RoomId').value = roomId;
        document.getElementById('CapacityInfo').textContent = `Wybrany pokój pomieści maksymalnie ${capacity} osób.`;
        document.getElementById('NumberOfGuests').max = capacity;

        // Show the form
        const form = document.getElementById('reservationForm');
        form.style.display = 'block';

        // Smooth scroll to the form
        form.scrollIntoView({ behavior: 'smooth', block: 'start' });
    }
</script>

<style>
    .room-card {
        cursor: pointer;
        border: 2px solid transparent;
        transition: border-color 0.3s ease, transform 0.2s ease;
    }

        .room-card:hover {
            border-color: #0d6efd;
            transform: scale(1.02);
        }

        .room-card.selected {
            border-color: #0d6efd;
            background-color: #f8f9fa;
        }

    .form-floating .form-control:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 5px rgba(13, 110, 253, 0.5);
    }

    .form-floating label {
        color: #6c757d;
    }

    .form-floating .form-control {
        border-radius: 0.375rem;
    }

    #reservationForm {
        margin-bottom: 150px;
    }
</style>
